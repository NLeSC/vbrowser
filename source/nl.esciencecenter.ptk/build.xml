<project name="nlesc-ptk" default="dist" basedir=".">
    <description>
        Project        : PTK
        Component      : ptk
		
		See build.prop for configuration options. 
		
    </description>

    <property name="project.root" value="." />
    <property file="${project.root}/project.prop" />
    <property environment="env" />
    <property name="comp.root" location="." />
    <property file="build.prop" />

    <!-- Target: init -->
    <target name="init">
    </target>

    <target name="init-build" depends="init">
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${comp.build}" />
        <mkdir dir="${comp.build}/bootstrap" />
        <mkdir dir="${comp.build.classdir}" />
        <mkdir dir="${comp.dist}" />
        <mkdir dir="${comp.dist}/lib" />
    </target>


    <target name="config" depends="init">
    </target>

    <path id="comp.classpath">
        <!-- include project libraries-->
        <fileset dir="${project.dist.lib}">
            <include name="**/*.jar" />
        </fileset>

        <fileset dir="${comp.root}/lib">
            <include name="**/*.jar" />
        </fileset>

        <!-- add local paths settings -->

        <pathelement location="${comp.build.classdir}" />
        <pathelement location="${comp.src}" />

    </path>

    <!-- Target: build -->
    <target name="build" depends="init-build" description="compile the source ">
        <!-- Compile the java code from into ${build} -->

        <javac srcdir="${comp.src}" destdir="${comp.build.classdir}" compiler="${javac.compiler}" debug="${javac.debug}" source="${javac.source}" target="${javac.target}">
            <classpath refid="comp.classpath" />
        </javac>

    </target>

    <!-- compile bootstrapper classes in seperate build directory -->
    <target name="build-bootstrap" depends="init-build" description="compile the source ">

        <property name="comp.build.bootstrap" value="${comp.build}/bootstrap" />
        <javac srcdir="${comp.src}/${bootstrap.package.dir}" destdir="${comp.build.bootstrap}" compiler="${javac.compiler}" source="1.6" debug="${javac.debug}" target="1.6" />

    </target>

    <!-- build component jar -->
    <target name="jar" depends="build">
        <!-- defaults -->
        <property name="comp.version" value="dev" />
        <property name="project.version" value="dev" />
        <property name="project.vendor" value="${user.name}" />

        <!-- Create application JAR file -->
        <jar jarfile="${comp.dist}/lib/${comp.artefactId}-${comp.version}.jar" basedir="${comp.build.classdir}">
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <attribute name="Main-Class" value="${comp.mainclass}" />
                <section name="common">
                    <attribute name="Specification-Title" value="${comp.artefactId}" />
                    <attribute name="Specification-Version" value="${project.version}" />
                    <attribute name="Specification-Vendor" value="${project.vendor}" />
                    <attribute name="Implementation-Title" value="${comp.artefactId}" />
                    <attribute name="Implementation-Version" value="${comp.version} ${TODAY}" />
                    <attribute name="Implementation-Vendor" value="${project.vendor}" />
                </section>
                <!-- <attribute name="Class-Path" value="bootstrap.jar" /> -->
            </manifest>
        </jar>
    </target>

    <target name="bootstrap-jar" depends="build-bootstrap">

        <jar jarfile="${comp.dist}/lib/Bootstrapper.jar" basedir="${comp.build.bootstrap}" includes="${bootstrap.package.dir}/*.class">

            <!-- define MANIFEST.MF -->
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <attribute name="Main-Class" value="${bootstrap.mainclass}" />
                <section name="common">
                    <attribute name="Specification-Title" value="${name}" />
                    <attribute name="Specification-Version" value="${vlet.version}" />
                    <attribute name="Specification-Vendor" value="www.eScienceCenter.nl" />
                    <attribute name="Implementation-Title" value="${component.name}" />
                    <attribute name="Implementation-Version" value="${component.version} ${TODAY}" />
                    <attribute name="Implementation-Vendor" value="www.eScienceCenter.nl" />
                </section>

                <!-- <attribute name="Class-Path" value="bootstrap.jar" /> -->
            </manifest>
        </jar>
    </target>

    <!-- Target: dist --> 
    <target name="dist" depends="build,bootstrap-jar,jar">

        <filterset id="compfilters">
            <!-- nifty:  ant filterset (keyword subtitution) while copying files ! -->
            <filter token="COMP_VERSION" value="${comp.version}" />
            <filter token="DATE" value="${comp.tstamp}" />
        </filterset>

    </target>

    <!-- Target: dist-install --> 
    <target name="dist-install" depends="dist" description="install libraries">
        <fail message="*** Error: property 'project.root' not defined. Please start with '-Dproject.root=&lt;path&gt;' argument. " unless="project.env.ok" />
        <mkdir dir="${project.dist.doc}" />

        <!-- toplevel directory structure -->
        <mkdir dir="${project.dist.lib}" />
        <mkdir dir="${project.dist.bin}" />
        <mkdir dir="${project.dist.lib}" />

        <copy todir="${project.dist.lib}">
            <fileset dir="${comp.dist}/lib" />
        </copy>

        <!-- libs -->
        <mkdir dir="${project.dist.auxlib}/jmimemagic"/>
        <copy todir="${project.dist.auxlib}/jmimemagic" >
            <fileset dir="lib/jmimemagic" />
        </copy>

    </target>

    <target name="clean" description="clean">
        <delete dir="${comp.dist}"/>
        <delete dir="${comp.build}"/>
    </target>

</project>


